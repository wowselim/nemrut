/*
 * This file is generated by jOOQ.
 */
package co.selim.nemrut.jooq.tables.records;


import co.selim.nemrut.jooq.tables.RolePermission;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermissionRecord extends UpdatableRecordImpl<RolePermissionRecord> implements Record4<String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_permission.role</code>.
     */
    public void setRole(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_permission.role</code>.
     */
    public String getRole() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.role_permission.permission</code>.
     */
    public void setPermission(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_permission.permission</code>.
     */
    public String getPermission() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.role_permission.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.role_permission.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.role_permission.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.role_permission.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RolePermission.ROLE_PERMISSION.ROLE;
    }

    @Override
    public Field<String> field2() {
        return RolePermission.ROLE_PERMISSION.PERMISSION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return RolePermission.ROLE_PERMISSION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RolePermission.ROLE_PERMISSION.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getRole();
    }

    @Override
    public String component2() {
        return getPermission();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getRole();
    }

    @Override
    public String value2() {
        return getPermission();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public RolePermissionRecord value1(String value) {
        setRole(value);
        return this;
    }

    @Override
    public RolePermissionRecord value2(String value) {
        setPermission(value);
        return this;
    }

    @Override
    public RolePermissionRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public RolePermissionRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public RolePermissionRecord values(String value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionRecord
     */
    public RolePermissionRecord() {
        super(RolePermission.ROLE_PERMISSION);
    }

    /**
     * Create a detached, initialised RolePermissionRecord
     */
    public RolePermissionRecord(String role, String permission, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(RolePermission.ROLE_PERMISSION);

        setRole(role);
        setPermission(permission);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RolePermissionRecord
     */
    public RolePermissionRecord(co.selim.nemrut.jooq.tables.pojos.RolePermission value) {
        super(RolePermission.ROLE_PERMISSION);

        if (value != null) {
            setRole(value.role());
            setPermission(value.permission());
            setCreatedAt(value.createdAt());
            setUpdatedAt(value.updatedAt());
            resetChangedOnNotNull();
        }
    }
}
