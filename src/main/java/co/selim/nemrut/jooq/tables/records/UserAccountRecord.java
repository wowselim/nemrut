/*
 * This file is generated by jOOQ.
 */
package co.selim.nemrut.jooq.tables.records;


import co.selim.nemrut.jooq.tables.UserAccount;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record5<UUID, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_account.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_account.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user_account.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_account.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_account.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_account.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_account.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_account.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.user_account.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_account.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserAccount.USER_ACCOUNT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UserAccount.USER_ACCOUNT.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public UserAccountRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserAccountRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserAccountRecord values(UUID value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(UUID id, String username, String password, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setUsername(username);
        setPassword(password);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(co.selim.nemrut.jooq.tables.pojos.UserAccount value) {
        super(UserAccount.USER_ACCOUNT);

        if (value != null) {
            setId(value.id());
            setUsername(value.username());
            setPassword(value.password());
            setCreatedAt(value.createdAt());
            setUpdatedAt(value.updatedAt());
            resetChangedOnNotNull();
        }
    }
}
